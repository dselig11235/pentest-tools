discovershot() {
    . vars
    webview "file:///root/data/$DOMAIN/index.htm" &
    pid=$!
    zenity --info --text "navigate to the Domain -> Hosts link"
    import -window `winfrompid $pid` "Host Enumeration $DOMAIN using discover.png"
    zenity --info --text "navigate to the Domain -> Netcraft"
    import -window `winfrompid $pid` "Network History and Information $DOMAIN using discover.png"
    zenity --info --text "navigate to the Contacts -> Emails"
    import -window `winfrompid $pid` "Email Enumeration of $DOMAIN using discover.png"
    zenity --info --text "navigate to the Contacts -> Names"
    import -window `winfrompid $pid` "Name Enumeration of $DOMAIN using discover.png"
}

hunterstart() {
    webview http://hunter.io &
    pid=$!
    . vars
    zenity --info --text "Close when you have the emails for $DOMAIN on screen"
    import -windows $(winfrompid $pid) "Email Enumeration of $DOMAIN using huter.io.png"
}

host2filename() {
    echo ${target//\//%%}
}

screenprog() {
    local name="$1"
    shift
    "$@" &
    local pid=$!
    sleep 1
    local webviewid=`winfrompid $pid`
    zenity --info --text "click OK to screenshot"
    import -window $webviewid "$name"
    kill $pid
}

screenpcap() {
    local target="$1"
    local name="${target%.*}"
    wireshark "$target" &
    local pid=$!
    sleep 5
    local webviewid=`winfrompid $pid`
    import -window $webviewid "$name.png"
    kill $pid
}

screenweb() {
    local target="$1"
    local name="$2"
    webview "$target" &
    local pid=$!
    sleep 1
    local webviewid=`winfrompid $pid`
    zenity --info --text "resize web page to fit contents"
    import -window $webviewid "$name"
    kill $pid
}

webviewstart() {
    for target in `cat targets.web`; do
        cleaned=$(host2filename "$target")
        screenweb "$target" "Manual Navigation to $cleaned.png" 
    done
}

manpassstart() {
    for target in `cat targets.web`; do
        cleaned=${target//:\/\//_}
        screenweb "$target" "Manual Password Attack on $cleaned.png" 
    done
}

sshstart() {
    for host in `cat targets.ssh`; do
        ip=$(gethost "$host")
        port=$(getport "$host")
        spool "Attempted SSH Login to $ip:$port" ssh "$ip" -p $port
    done
}

xdotype() {
    xdotool type --window "$winid" "$1"; xdotool key --window "$winid" Return
}

telnet-banner-start() {
    for target in `cat targets.telnet`; do
        host=${target%:*}
        port=${target#*:}
        out="Telnet Banner on ${target//:\/\//_}"
        (
            sleep 2
            xdotool key "ctrl+bracketright"
            xdotype quit
        ) &

        clear
        echo -e "${red}bash-4.3#$nc telnet $host $port" | tee "$out.spl"
        telnet $host $port |& tee --append "$out.spl"
        kill %1
        declare -i sz=`awk 'END {print NR}' "$out.spl"`
        sz=$(((sz+4)*16))
        import -window "$winid" -crop "800x$sz+12+14" "$out.png"
    done
}


telnet-password-start() {
    userpass="$1"
    for target in `cat targets.telnet`; do
        host=${target%:*}
        port=${target#*:}
        out="Automated Telnet Login on ${target//:\/\//_}"
        (
            sleep 2
            readarray creds < <(cat $userpass)
            for cred in "${creds[@]}"; do
                u="${cred%%:*}"
                p="${cred#*:}"
                xdotype "$u"
                sleep .5
                xdotype "p"
                sleep 3
            done
            xdotype
        ) &

        clear
        echo -e "${red}bash-4.3#$nc telnet $host $port" | tee "$out.spl"
        telnet $host $port |& tee --append "$out.spl"
        kill %1
        declare -i sz=`awk 'END {print NR}' "$out.spl"`
        sz=$(((sz+4)*16))
        import -window "$winid" -crop "800x$sz+12+14" "$out.png"
    done
}


