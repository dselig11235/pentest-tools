#!/usr/bin/perl

use Getopt::Std;
use Digest::SHA qw(sha512_base64);

sub url_encode {
    my $rv = shift;
    $rv =~ s/([^a-z\d\Q.-_~ \E])/sprintf("%%%2.2X", ord($1))/geix;
    $rv =~ tr/ /+/;
    return $rv;
}

sub url_decode {
    my $rv = shift;
    $rv =~ tr/+/ /;
    $rv =~ s/\%([a-f\d]{2})/ pack 'C', hex $1 /geix;
    return $rv;
}

sub printToFile {
    my ($filename, $msg) = @_;
    open(my $out, ">", "$filename")
        or die "Couldn't open file '$filename'";
    print $out $msg;
    close $out;
}

open(my $tfile, '<', 'targets.web')
    or die "Couldn't open file targets.web";

while(<$tfile>) {
    chomp;
    my $dir = "web." . url_encode($_);
    system("mkdir", "-p", $dir);
    my $info = `curl -kLs -o "$dir/index.html" -D "$dir/headers" -w "%{url_effective},%{http_code}" "$_"`;
    print "Processing $_\n";
    #print qq(curl -kLs -o "$dir/index.html" -D "$dir/headers" -w "%{url_effective},%{http_code}" "$_"), "\n";
    @info = split(/,\s*/, $info);
    system('webshot.py', $_, "$dir/screenshot.png");
    printToFile("$dir/url_effective", $info[0]);
    printToFile("$dir/code", $info[1]);
    if(open(my $htmlfile, "<", "$dir/index.html")) {
        my $html = do {
            local $/ = undef;
            <$htmlfile>;
        };
        printToFile("$dir/sha", sha512_base64($html));
        if($html =~ m'<title>(.*)</title>'sm) {
            printToFile("$dir/title", $1);
        } else {
            printToFile("$dir/title", '');
        }
    }
    close $index;
    close $out;
}
