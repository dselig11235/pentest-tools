#!/usr/bin/perl

use Data::Dumper qw(Dumper);

sub encode {
    my $target = shift;
    $target =~ tr'/'%';
    return $target;
}

sub decode {
    my $file = shift;
    $file =~ tr'%'/';
    return $target;
}

sub url_encode {
    my $rv = shift;
    $rv =~ s/([^a-z\d\Q.-_~ \E])/sprintf("%%%2.2X", ord($1))/geix;
    $rv =~ tr/ /+/;
    return $rv;
}

sub url_decode {
    my $rv = shift;
    $rv =~ tr/+/ /;
    $rv =~ s/\%([a-f\d]{2})/ pack 'C', hex $1 /geix;
    return $rv;
}

sub readFromFile {
    my ($filename) = shift;
    local $/ = undef;
    if(open(FILE, "<", "$filename")) {
        return <FILE>;
    } else {
        return '';
    }
    close FILE;
}

open(my $tfile, '<', 'targets.web')
    or die "Couldn't open file targets.web";

my %pages = ();
while(<$tfile>) {
    chomp;
    my $dir = 'web.' . encode($_);
    my $hash = readFromFile("$dir/sha");
    my $screen = url_encode("$dir") . "/Manual Navigation to " . url_encode(encode($_)) . ".png";
    if(not exists $pages{$hash}) {
        $pages{$hash}{'screenshot'} = $screen;
        $pages{$hash}{'urls'} = [$_];
    } else {
        push(@{$pages{$hash}{'urls'}}, $_);
    }
}

my $style = <<"END_STYLE";
#container {
    display: flex;
    flex-wrap: wrap;
}
img {
    width:320px;
    max-height: 240px;
    overflow:hidden;
}
.page {
    border: 1px solid black;
}
.urls {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    max-height: 5em;
    overflow: auto;
}
span.url {
    padding-right: .8em;
    padding-left: .2em;
}    
END_STYLE

print "<html><head><style>\n";
print $style;
print "</style></head><body><div id='container'>\n";
foreach my $hash (keys %pages) {
    my $img = $pages{$hash}{'screenshot'};
    my @urls = @{$pages{$hash}{'urls'}};
    print "<div class='page'>\n";
    print "  <img src='$img'>\n";
    print "  <div class='urls'>\n";
    foreach my $url (@urls) {
        print "    <span class='url'>$url</span>\n";
    }
    print "  </div>\n";
    print "</div>\n";
}
print "</div></body></html>\n";
